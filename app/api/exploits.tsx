import { handleError } from "app/apiUtil"
import { BlitzApiRequest, BlitzApiResponse, BlitzApiHandler } from "blitz"
import db from "db"
import * as z from "zod"

const CreateExploitSchema = z.object({
  createdAt: z.date().optional(),
  name: z.string(),
  key: z.string(),
  problemId: z.number(),
})

const handler: BlitzApiHandler = async (req: BlitzApiRequest, res: BlitzApiResponse) => {
  if (req.method !== "GET" && req.method !== "POST") {
    res.status(405).json({
      msg: "Method not allowed",
    })
    return
  }

  try {
    if (req.method === "GET") {
      const exploits = await db.exploit.findMany()
      res.status(200).json(exploits)
    } else if (req.method === "POST") {
      const args = CreateExploitSchema.parse(req.body)

      const exploit = await db.exploit.create({
        data: {
          ...args,
        },
      })

      res.status(200).json(exploit)
    }
  } catch (err) {
    handleError(err, res)
  }
}

export default handler
