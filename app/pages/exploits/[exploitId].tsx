import { BlitzPage, NotFoundError, useParam, useQuery } from "blitz"
import Layout from "app/core/layouts/Layout"
import getExploit from "app/queries/getExploit"

type ExploitViewProps = {
  exploitId: number
}

const ExploitView = (props: ExploitViewProps) => {
  const [exploit] = useQuery(getExploit, props.exploitId)

  if (!exploit) {
    throw new NotFoundError("Exploit not found")
  }

  return (
    <div className="detail">
      <p>
        <span className="label">Problem</span> {exploit.problem.name}
      </p>
      <p>
        <span className="label">Name</span> {exploit.name}
      </p>
    </div>
  )
}

const ExploitDetail: BlitzPage = () => {
  const exploitId = useParam("exploitId", "number")!
  const [exploit] = useQuery(getExploit, exploitId)

  if (!exploit) {
    throw new NotFoundError("Exploit not found")
  }

  return (
    <div className="card">
      <div className="card-title">
        <h1>Exploit {exploit.key}</h1>
      </div>
      <div className="card-body">
        <ExploitView exploitId={exploitId} />
      </div>
    </div>
  )
}

ExploitDetail.getLayout = (page) => <Layout title="Exploits">{page}</Layout>

export default ExploitDetail
