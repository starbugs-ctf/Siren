import { BlitzPage, NotFoundError, useParam, useQuery } from "blitz"
import { format } from "date-fns"
import Layout from "app/core/layouts/Layout"
import getExploit from "app/queries/getExploit"
import { DATE_FORMAT } from "app/timeUtil"
import KeywordChip from "app/components/KeywordChip"

type ExploitViewProps = {
  exploitId: number
}

const ExploitView = (props: ExploitViewProps) => {
  const [exploit] = useQuery(getExploit, props.exploitId)

  if (!exploit) {
    throw new NotFoundError("Exploit not found")
  }

  return (
    <div className="detail">
      <p>Created at {format(exploit.createdAt, DATE_FORMAT)}</p>

      <h2 className="header">Info</h2>
      <p>
        <span className="label">Status</span>
        <KeywordChip text={exploit.enabled ? "ENABLED" : "DISABLED"} />
      </p>
      <p>
        <span className="label">Problem</span>
        {exploit.problem.name}
      </p>
      <p>
        <span className="label">Name</span>
        {exploit.name}
      </p>
    </div>
  )
}

const ExploitDetail: BlitzPage = () => {
  const exploitId = useParam("exploitId", "number")!
  const [exploit] = useQuery(getExploit, exploitId)

  if (!exploit) {
    throw new NotFoundError("Exploit not found")
  }

  return (
    <div className="card">
      <div className="card-title">
        <h1>Exploit {exploit.key}</h1>
      </div>
      <div className="card-body">
        <ExploitView exploitId={exploitId} />
      </div>
    </div>
  )
}

ExploitDetail.getLayout = (page) => <Layout title="Exploits">{page}</Layout>

export default ExploitDetail
